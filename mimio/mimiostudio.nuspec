<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>mimio-studio</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>11.54.0</version>
    <packageSourceUrl>https://github.com/hartmch/ChocolateyPackages/mimio</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>hartmch</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>Mimio Studio</title>
    <authors>Boxlight</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://mimio.boxlight.com/mimiostudio-classroom-software/</projectUrl>
    <iconUrl>https://cdn.rawgit.com/hartmch/ChocolateyPackages/2bcd5136/mimio/mimio.png</iconUrl>
    <copyright>©2018 BOXLIGHT, Inc.Boxlight</copyright>
    <!-- If there is a license Url available, it is required for the community feed -->
    <licenseUrl>http://www.mimio.com/en-NA/Products/MimioStudio-Licensing.aspx</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <docsUrl>http://www.mimio.com/~/media/Files/Downloads/Training/Self-Guided/Guides/MimioClassroom/Studio11/MimioClassroom_UG_Win_en-GB.ashx</docsUrl>

    <tags>Mimio </tags>
    <summary>MimioStudio software includes all of the tools you need to get the most from your
MimioClassroom devices.</summary>
    <description>MimioStudio software includes all of the tools you need to get the most from your
MimioClassroom devices. You can also use the MimioStudio software without a
MimioClassroom device to prepare presentations and manipulate previously created content.
MimioStudio Notebook provides a multi-page workspace for creating lessons and
presentations. MimioStudio Notebook is very similar in use to other word processing or
presentation software applications.
MimioStudio Notebook provides multiple authoring and editing tools for creating almost
any type of content. You can use Notebook with MimioStudio Tools to create a variety of
objects including text boxes, freehand writing and drawing, lines, arrows and many basic
shapes. Images can be imported into a Notebook, both as objects and as background images.

**Mimio Studio comes with a 30 day evaluation.  License is included with purchased hardware.**
    </description>
    <releaseNotes>The 11.50 release added support for MimioMobile for the Web, available through a
(compatible) Web browser at mobile.mimio.com. The release, coupled with the existing
Apple and Android apps, allows the MimioMobile app to work on almost any device the
student may have in the classroom: tablets, smartphones, and laptops (including
Chromebooks).
The 11.51 release adds support for Boxlight interactive hardware devices. These devices
will now activate a full version of MimioStudio when connected. The release also contains
bug fixes for auto-calibration and improvements to the SMART Notebook import
functionality.
The 11.52 release adds support for more Boxlight interactive hardware devices. It also
contains a bug fix that corrects a problem using Control with MimioMobile.
The 11.53 release adds support for the latest Boxlight ProColor Interactive Flat Panel
Displays. It also provides improved extended monitor support and improvements to the
SMART Notebook import functionality.
The 11.54 release provides improvements to Tools application on 4K Displays. It also
includes Multi-Touch on Boxlight ProColor Panels for Mac. It also adds support for more
Boxlight interactive hardware devices and improvements to the Promethean files import
functionality. 
    </releaseNotes>
    <!-- =============================== -->      

   
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>
